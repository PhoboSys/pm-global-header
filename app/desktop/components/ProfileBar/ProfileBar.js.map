{"version":3,"file":"ProfileBar.js","names":["_react","_interopRequireWildcard","require","_clsx","_interopRequireDefault","_propTypes","_calcUtils","_htmlUtils","_BalanceCurrency","_Spinner","_AccountIcon","_PMGlobalHeaderProvider","_DropdownIcon","_ProfileBarModule","e","__esModule","_getRequireWildcardCache","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_defineProperty","_toPropertyKey","value","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","length","l","iterator","f","o","next","done","push","isArray","options","label","currency","useChangeERC20","account","number","prevNumberRef","useRef","prevCurrencyRef","prevAccountRef","_useState","useState","diff","changeid","_useState2","state","setState","useEffect","prevNumber","current","prevCurrency","prevAccount","sub","ProfileBar","_ref","className","innerClassName","balance","nickname","chainName","onClick","onCurrencyChanged","onIconClick","_useGHProvider","useGHProvider","currencyFill","maximumFractionDigits","_useChangeERC","_useChangeERC2","difference","handleClick","useCallback","toLowerCase","handleIconClick","stopPropagation","_useState3","_useState4","popoverPop","setPopoverPop","handleBalanceClick","handleCurrencyChanged","_e$target","newcurrency","target","dataset","popover","handler","contains","window","addEventListener","removeEventListener","htmldifference","htmlCurrency","includes","concat","createElement","cn","css","profilebar","inner","key","cash","increase","isPositive","decrease","isNegative","fill","spinner","dropdownIcon","ref","map","option","idx","active","optionIcon","optionBalance","optionLabel","optionCurrency","wallet","title","htmlAddress","action","propTypes","PropTypes","string","oneOfType","func","_default","exports","React","memo"],"sources":["../../../../src/desktop/components/ProfileBar/ProfileBar.js"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react'\n\nimport cn from 'clsx'\nimport PropTypes from 'prop-types'\nimport { isPositive, isNegative, sub } from 'pm-libs/calc-utils'\n\nimport { htmlAddress, htmlCurrency } from '@lib/html-utils'\n\nimport BalanceCurrency from '../common/BalanceCurrency'\nimport Spinner from '../common/Spinner'\nimport AccountIcon from '../AccountIcon'\nimport { useGHProvider } from '../PMGlobalHeaderProvider'\nimport DropdownIcon from '../SVG/DropdownIcon'\n\nimport css from './ProfileBar.module.scss'\n\nconst options = [\n  { label: 'USD Coin', currency: 'USDC' },\n  { label: 'Oracly', currency: 'ORCY' },\n  { label: 'Oracly', currency: 'DEMO' },\n]\n\nconst useChangeERC20 = (account, number, currency) => {\n  const prevNumberRef = useRef(number)\n  const prevCurrencyRef = useRef(currency)\n  const prevAccountRef = useRef(account)\n\n  const [state, setState] = useState({ diff: 0, changeid: 0 })\n\n  useEffect(() => {\n    const prevNumber = prevNumberRef.current\n    const prevCurrency = prevCurrencyRef.current\n    const prevAccount = prevAccountRef.current\n\n    if (\n        prevNumber !== number &&\n        prevCurrency === currency &&\n        prevAccount === account\n    ){\n      setState({ diff: sub(number, prevNumber), changeid: state.changeid+1 })\n    }\n\n    prevNumberRef.current = number\n    prevCurrencyRef.current = currency\n    prevAccountRef.current = account\n\n  }, [number, currency, account])\n\n  return [state.diff, state.changeid]\n}\n\nconst ProfileBar = ({\n  className,\n  innerClassName,\n  currency,\n  balance,\n  account,\n  nickname,\n  chainName,\n  onClick,\n  onCurrencyChanged,\n  onIconClick,\n}) => {\n  const { currencyFill, maximumFractionDigits } = useGHProvider()\n\n  const [difference, changeid] = useChangeERC20(account, balance, currency)\n\n  const handleClick = useCallback(() => {\n    if (onClick) onClick(account.toLowerCase())\n  }, [onClick, account])\n\n  const handleIconClick = useCallback((e) => {\n    e.stopPropagation()\n    if (onIconClick) onIconClick(account.toLowerCase())\n  }, [onIconClick, account])\n\n  const [popoverPop, setPopoverPop] = useState(false)\n  const handleBalanceClick = useCallback((e) => {\n    e.stopPropagation()\n    setPopoverPop(!popoverPop)\n  }, [popoverPop])\n\n  const handleCurrencyChanged = useCallback((e) => {\n    e.stopPropagation()\n    const newcurrency = e?.target?.dataset?.currency\n    if (newcurrency !== currency && onCurrencyChanged) {\n      setPopoverPop(false)\n      onCurrencyChanged(newcurrency)\n    }\n  }, [currency, onCurrencyChanged])\n\n  const popover = useRef(null)\n  useEffect(() => {\n    const handler = (e) => {\n      if (popover.current && !popover.current.contains(e.target)) {\n        setPopoverPop(false)\n      }\n    }\n    window.addEventListener('click', handler)\n    return () => {\n      window.removeEventListener('click', handler)\n    }\n  }, [])\n\n  let htmldifference = htmlCurrency(difference, maximumFractionDigits)\n  if (htmldifference.includes('<-')) htmldifference = `-<${htmldifference.slice(2)}`\n\n  return (\n    <div className={cn(css.profilebar, className)} onClick={handleClick}>\n      <div className={cn(css.inner, innerClassName)}>\n\n        <div\n          key={changeid}\n          className={cn(css.cash, {\n            [css.increase]: difference && isPositive(difference),\n            [css.decrease]: difference && isNegative(difference),\n          })}\n          onClick={handleBalanceClick}\n        >\n\n          <BalanceCurrency fill={currencyFill} currency={currency} />\n          {balance && balance !== 0 ? (\n            <span className={css.value}>{htmlCurrency(balance, maximumFractionDigits)}</span>\n          ) : (\n            <Spinner className={css.spinner} />\n          )}\n          <span className={css.dropdownIcon}><DropdownIcon /></span>\n          <span className={css.difference}>\n            <span>+</span>\n            {htmldifference}\n          </span>\n          {popoverPop &&\n          <div ref={popover} className={css.popover}>\n            {options.map((option, idx) => (\n\n              <div\n                key={idx}\n                className={cn(css.option, { [css.active]: option.currency === currency })}\n                data-currency={option.currency}\n                onClick={handleCurrencyChanged}\n              >\n                <span className={css.optionIcon}>\n                  <BalanceCurrency fill={currencyFill} currency={option.currency} className={css.optionBalance} />\n                </span>\n                <span className={css.optionLabel}>{option.label}</span>\n                <span className={css.optionCurrency}>{`(${option.currency})`}</span>\n              </div>\n\n            ))}\n          </div>\n          }\n        </div>\n        <div className={css.account}>\n          <div className={css.wallet} title={nickname}>{nickname || htmlAddress(account)}</div>\n          <div className={css.name}>{chainName}</div>\n        </div>\n        <AccountIcon\n          className={css.action}\n          account={account}\n          onClick={handleIconClick}\n        />\n      </div>\n    </div>\n  )\n}\n\nProfileBar.propTypes = {\n  className: PropTypes.string,\n  innerClassName: PropTypes.string,\n  currency: PropTypes.string,\n  balance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  account: PropTypes.string,\n  nickname: PropTypes.string,\n  chainName: PropTypes.string,\n  onClick: PropTypes.func,\n  onIconClick: PropTypes.func,\n  onCurrencyChanged: PropTypes.func,\n}\n\nexport default React.memo(ProfileBar)\n"],"mappings":"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","ignoreList":[]}