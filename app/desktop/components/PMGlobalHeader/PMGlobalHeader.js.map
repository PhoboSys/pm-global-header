{"version":3,"file":"PMGlobalHeader.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_config","_PMGlobalHeaderProvider","_Navbar","_Header","_ProfileBar","_ConnectBar","_StatisticsBar","_Connect","_AuthModal","_modals","obj","__esModule","_getRequireWildcardCache","e","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","len","length","arr2","l","Symbol","iterator","f","next","done","push","value","isArray","PMGlobalHeader","_ref","headerClassName","connectClassName","profileBarClassName","profileBarInnerClassName","_ref$basepath","basepath","logoFill","logoLabelFill","currencyFill","mustUserLogin","isConnected","isConnectBarOpenedControlled","isConnectBarOpened","isStatisticsBarOpenedControlled","isStatisticsBarOpened","account","statisticsAccount","balance","currency","chainName","connectors","activeNavigationItem","statistics","onConnectClick","onDisconnectClick","onConnectorClick","onProfileClick","onProfileIconClick","onStatisticsBarCloseClick","onConnectBarCloseClick","content","children","isConnectBarContolled","undefined","isStatisticsBarContolled","_useState","useState","_useState2","setConnectBarOpened","_useState3","_useState4","setStatisticsBarOpened","openConnectBar","useCallback","closeConnectBar","handleConnectClick","handleConnectorClick","connectorId","handleConnectBarCloseClick","handleCloseStatisticsBar","handleProfileIconClick","handleDisconnectClick","_useModal","useModal","Content","AuthModal","hideClose","shouldCloseOnOverlayClick","openOnMount","modal","openAuthModal","open","closeAuthModal","close","createElement","Fragment","active","className","innerClassName","onClick","onIconClick","isOpened","onCloseClick","id","config","modal_id","propTypes","PropTypes","string","bool","oneOfType","number","array","object","func","node","_default","exports","React","memo"],"sources":["../../../../src/desktop/components/PMGlobalHeader/PMGlobalHeader.js"],"sourcesContent":["import React, { useCallback, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport config from '../../../config'\nimport PMGlobalHeaderProvider from '../PMGlobalHeaderProvider'\nimport Navbar from '../Navbar'\nimport Header from '../Header'\nimport ProfileBar from '../ProfileBar'\nimport ConnectBar from '../ConnectBar'\nimport StatisticsBar from '../StatisticsBar'\nimport Connect from '../Connect'\nimport AuthModal from '../AuthModal'\nimport { useModal } from '../modals';\n\nconst PMGlobalHeader = ({\n  headerClassName,\n  connectClassName,\n  profileBarClassName,\n  profileBarInnerClassName,\n  basepath = \"/\",\n  logoFill,\n  logoLabelFill,\n  currencyFill,\n  mustUserLogin,\n  isConnected,\n  isConnectBarOpened: isConnectBarOpenedControlled,\n  isStatisticsBarOpened: isStatisticsBarOpenedControlled,\n  account,\n  statisticsAccount,\n  balance,\n  currency,\n  chainName,\n  connectors,\n  activeNavigationItem,\n  statistics,\n  onConnectClick,\n  onDisconnectClick,\n  onConnectorClick,\n  onProfileClick,\n  onProfileIconClick,\n  onStatisticsBarCloseClick,\n  onConnectBarCloseClick,\n  content,\n  children,\n}) => {\n  const isConnectBarContolled = isConnectBarOpenedControlled !== undefined\n  const isStatisticsBarContolled = isStatisticsBarOpenedControlled !== undefined\n\n  const [isConnectBarOpened, setConnectBarOpened] = useState(false)\n  const [isStatisticsBarOpened, setStatisticsBarOpened] = useState(false)\n  \n  const openConnectBar = useCallback(() => setConnectBarOpened(true), [])\n  const closeConnectBar = useCallback(() => setConnectBarOpened(false), [])\n\n  const handleConnectClick = useCallback(() => {\n    if (onConnectClick) onConnectClick()\n    if (!isConnectBarContolled) openConnectBar()\n  }, [isConnectBarContolled, openConnectBar, onConnectClick])\n\n  const handleConnectorClick = useCallback((connectorId) => {\n    if (onConnectorClick) onConnectorClick(connectorId)\n    if (!isConnectBarContolled) closeConnectBar()\n  }, [isConnectBarContolled, onConnectorClick, closeConnectBar])\n\n  const handleConnectBarCloseClick = useCallback(() => {\n    if (onConnectBarCloseClick) onConnectBarCloseClick()\n    if (!isConnectBarContolled) closeConnectBar()\n  }, [isConnectBarContolled, onConnectBarCloseClick, closeConnectBar])\n\n  const handleCloseStatisticsBar = useCallback(() => {\n    if (!isStatisticsBarContolled) setStatisticsBarOpened(false)\n    if (onStatisticsBarCloseClick) onStatisticsBarCloseClick()\n  }, [isStatisticsBarContolled, onStatisticsBarCloseClick])\n\n  const handleProfileIconClick = useCallback(() => {\n    if (!isStatisticsBarContolled) setStatisticsBarOpened(true)\n    if (onProfileIconClick) onProfileIconClick()\n  }, [isStatisticsBarContolled, onProfileIconClick])\n\n  const handleDisconnectClick = useCallback(() => {\n    if (!isStatisticsBarContolled) setStatisticsBarOpened(false)\n    if (onDisconnectClick) onDisconnectClick()\n  }, [isStatisticsBarContolled, onDisconnectClick])\n\n  const { modal, open: openAuthModal, close: closeAuthModal } = useModal({\n    Content: AuthModal,\n    hideClose: true,\n    shouldCloseOnOverlayClick: false,\n    openOnMount: mustUserLogin,\n    onConnectorClick,\n    connectors,\n    isConnected,\n  })\n\n  return (\n    <>\n      <PMGlobalHeaderProvider\n        currencyFill={currencyFill}\n        openAuthModal={openAuthModal}\n        closeAuthModal={closeAuthModal}\n      >\n        <Navbar\n          basepath={basepath}\n          logoFill={logoFill}\n          logoLabelFill={logoLabelFill}\n          active={activeNavigationItem}\n        />\n        <Header className={headerClassName}>\n          {content}\n          {isConnected ? (\n            <ProfileBar\n              className={profileBarClassName}\n              innerClassName={profileBarInnerClassName}\n              balance={balance}\n              currency={currency}\n              account={account}\n              chainName={chainName}\n              onDisconnectClick={onDisconnectClick}\n              onClick={onProfileClick}\n              onIconClick={handleProfileIconClick}\n            />\n          ) : (\n            <Connect\n              className={connectClassName}\n              onClick={handleConnectClick}\n            />\n          )}\n        </Header>\n        <ConnectBar\n          isOpened={isConnectBarContolled ? isConnectBarOpenedControlled : isConnectBarOpened}\n          connectors={connectors}\n          onCloseClick={handleConnectBarCloseClick}\n          onConnectorClick={handleConnectorClick}\n        />\n        <StatisticsBar\n          account={account}\n          statisticsAccount={statisticsAccount}\n          isOpened={isStatisticsBarContolled ? isStatisticsBarOpenedControlled : isStatisticsBarOpened}\n          statistics={statistics}\n          onCloseClick={handleCloseStatisticsBar}\n          onDisconnectClick={handleDisconnectClick}\n        />\n        {children}\n        {modal}\n      </PMGlobalHeaderProvider>\n      <div id={config.modal_id} />\n    </>\n  )\n}\n\nPMGlobalHeader.propTypes = {\n  headerClassName: PropTypes.string,\n  connectClassName: PropTypes.string,\n  profileBarClassName: PropTypes.string,\n  profileBarInnerClassName: PropTypes.string,\n  basepath: PropTypes.string,\n  logoFill: PropTypes.string,\n  logoLabelFill: PropTypes.string,\n  currencyFill: PropTypes.string,\n  mustUserLogin: PropTypes.bool,\n  isConnected: PropTypes.bool,\n  isConnectBarOpened: PropTypes.bool,\n  isStatisticsBarOpened: PropTypes.bool,\n  account: PropTypes.string,\n  statisticsAccount: PropTypes.string,\n  balance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  currency: PropTypes.string,\n  chainName: PropTypes.string,\n  connectors: PropTypes.array,\n  activeNavigationItem: PropTypes.string,\n  statistics: PropTypes.object,\n  onConnectClick: PropTypes.func,\n  onDisconnectClick: PropTypes.func,\n  onConnectorClick: PropTypes.func,\n  onProfileClick: PropTypes.func,\n  onProfileIconClick: PropTypes.func,\n  onConnectBarCloseClick: PropTypes.func,\n  onStatisticsBarCloseClick: PropTypes.func,\n  content: PropTypes.node,\n  children: PropTypes.node,\n}\n\nexport default React.memo(PMGlobalHeader)"],"mappings":"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"}