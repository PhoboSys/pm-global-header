{"version":3,"file":"PMGlobalHeader.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_config","_FeatureToggle","_PMGlobalHeaderProvider","_Navbar","_Header","_ProfileBar","_ConnectBar","_StatisticsBar","_Connect","_AuthModal","_modals","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","length","arr2","r","l","t","Symbol","iterator","e","u","a","f","next","done","push","value","isArray","PMGlobalHeader","_ref","headerClassName","connectClassName","profileBarClassName","profileBarInnerClassName","_ref$basepath","basepath","logoFill","logoLabelFill","currencyFill","mustUserLogin","isConnected","isConnectBarOpenedControlled","isConnectBarOpened","isStatisticsBarOpenedControlled","isStatisticsBarOpened","account","statisticsAccount","balance","currency","chainName","connectors","activeNavigationItem","statistics","featureToggles","onConnectClick","onDisconnectClick","onConnectorClick","onProfileClick","onProfileIconClick","onStatisticsBarCloseClick","onConnectBarCloseClick","onCurrencyChanged","content","children","isConnectBarContolled","undefined","isStatisticsBarContolled","_useState","useState","_useState2","setConnectBarOpened","_useState3","_useState4","setStatisticsBarOpened","openConnectBar","useCallback","closeConnectBar","handleConnectClick","handleConnectorClick","connectorId","handleConnectBarCloseClick","handleCloseStatisticsBar","handleProfileIconClick","handleDisconnectClick","_useModal","useModal","Content","AuthModal","hideClose","shouldCloseOnOverlayClick","openOnMount","modal","openAuthModal","open","closeAuthModal","close","createElement","FeatureTogglesProvider","toggles","active","className","innerClassName","onClick","onIconClick","isOpened","onCloseClick","id","config","modal_id","propTypes","PropTypes","string","bool","oneOfType","number","array","object","func","node","_default","React","memo","exports"],"sources":["../../../../src/desktop/components/PMGlobalHeader/PMGlobalHeader.js"],"sourcesContent":["import React, { useCallback, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport config from '../../../config'\nimport { FeatureTogglesProvider }from '../FeatureToggle'\nimport PMGlobalHeaderProvider from '../PMGlobalHeaderProvider'\nimport Navbar from '../Navbar'\nimport Header from '../Header'\nimport ProfileBar from '../ProfileBar'\nimport ConnectBar from '../ConnectBar'\nimport StatisticsBar from '../StatisticsBar'\nimport Connect from '../Connect'\nimport AuthModal from '../AuthModal'\nimport { useModal } from '../modals';\n\nconst PMGlobalHeader = ({\n  headerClassName,\n  connectClassName,\n  profileBarClassName,\n  profileBarInnerClassName,\n  basepath = \"/\",\n  logoFill,\n  logoLabelFill,\n  currencyFill,\n  mustUserLogin,\n  isConnected,\n  isConnectBarOpened: isConnectBarOpenedControlled,\n  isStatisticsBarOpened: isStatisticsBarOpenedControlled,\n  account,\n  statisticsAccount,\n  balance,\n  currency,\n  chainName,\n  connectors,\n  activeNavigationItem,\n  statistics,\n  featureToggles,\n  onConnectClick,\n  onDisconnectClick,\n  onConnectorClick,\n  onProfileClick,\n  onProfileIconClick,\n  onStatisticsBarCloseClick,\n  onConnectBarCloseClick,\n  onCurrencyChanged,\n  content,\n  children,\n}) => {\n  const isConnectBarContolled = isConnectBarOpenedControlled !== undefined\n  const isStatisticsBarContolled = isStatisticsBarOpenedControlled !== undefined\n\n  const [isConnectBarOpened, setConnectBarOpened] = useState(false)\n  const [isStatisticsBarOpened, setStatisticsBarOpened] = useState(false)\n  \n  const openConnectBar = useCallback(() => setConnectBarOpened(true), [])\n  const closeConnectBar = useCallback(() => setConnectBarOpened(false), [])\n\n  const handleConnectClick = useCallback(() => {\n    if (onConnectClick) onConnectClick()\n    if (!isConnectBarContolled) openConnectBar()\n  }, [isConnectBarContolled, openConnectBar, onConnectClick])\n\n  const handleConnectorClick = useCallback((connectorId) => {\n    if (onConnectorClick) onConnectorClick(connectorId)\n    if (!isConnectBarContolled) closeConnectBar()\n  }, [isConnectBarContolled, onConnectorClick, closeConnectBar])\n\n  const handleConnectBarCloseClick = useCallback(() => {\n    if (onConnectBarCloseClick) onConnectBarCloseClick()\n    if (!isConnectBarContolled) closeConnectBar()\n  }, [isConnectBarContolled, onConnectBarCloseClick, closeConnectBar])\n\n  const handleCloseStatisticsBar = useCallback(() => {\n    if (!isStatisticsBarContolled) setStatisticsBarOpened(false)\n    if (onStatisticsBarCloseClick) onStatisticsBarCloseClick()\n  }, [isStatisticsBarContolled, onStatisticsBarCloseClick])\n\n  const handleProfileIconClick = useCallback(() => {\n    if (!isStatisticsBarContolled) setStatisticsBarOpened(true)\n    if (onProfileIconClick) onProfileIconClick()\n  }, [isStatisticsBarContolled, onProfileIconClick])\n\n  const handleDisconnectClick = useCallback(() => {\n    if (!isStatisticsBarContolled) setStatisticsBarOpened(false)\n    if (onDisconnectClick) onDisconnectClick()\n  }, [isStatisticsBarContolled, onDisconnectClick])\n\n  const { modal, open: openAuthModal, close: closeAuthModal } = useModal({\n    Content: AuthModal,\n    hideClose: true,\n    shouldCloseOnOverlayClick: false,\n    openOnMount: mustUserLogin,\n    onConnectorClick,\n    connectors,\n    isConnected,\n  })\n\n  return (\n    <FeatureTogglesProvider toggles={featureToggles}>\n      <PMGlobalHeaderProvider\n        currencyFill={currencyFill}\n        openAuthModal={openAuthModal}\n        closeAuthModal={closeAuthModal}\n      >\n        <Navbar\n          basepath={basepath}\n          logoFill={logoFill}\n          logoLabelFill={logoLabelFill}\n          active={activeNavigationItem}\n        />\n        <Header className={headerClassName}>\n          {content}\n          {isConnected ? (\n            <ProfileBar\n              className={profileBarClassName}\n              innerClassName={profileBarInnerClassName}\n              balance={balance}\n              currency={currency}\n              account={account}\n              chainName={chainName}\n              onDisconnectClick={onDisconnectClick}\n              onClick={onProfileClick}\n              onIconClick={handleProfileIconClick}\n              onCurrencyChanged={onCurrencyChanged}\n            />\n          ) : (\n            <Connect\n              className={connectClassName}\n              onClick={handleConnectClick}\n            />\n          )}\n        </Header>\n        <ConnectBar\n          isOpened={isConnectBarContolled ? isConnectBarOpenedControlled : isConnectBarOpened}\n          connectors={connectors}\n          onCloseClick={handleConnectBarCloseClick}\n          onConnectorClick={handleConnectorClick}\n        />\n        <StatisticsBar\n          account={account}\n          statisticsAccount={statisticsAccount}\n          isOpened={isStatisticsBarContolled ? isStatisticsBarOpenedControlled : isStatisticsBarOpened}\n          statistics={statistics}\n          onCloseClick={handleCloseStatisticsBar}\n          onDisconnectClick={handleDisconnectClick}\n        />\n        {children}\n        {modal}\n      </PMGlobalHeaderProvider>\n      <div id={config.modal_id} />\n    </FeatureTogglesProvider>\n  )\n}\n\nPMGlobalHeader.propTypes = {\n  headerClassName: PropTypes.string,\n  connectClassName: PropTypes.string,\n  profileBarClassName: PropTypes.string,\n  profileBarInnerClassName: PropTypes.string,\n  basepath: PropTypes.string,\n  logoFill: PropTypes.string,\n  logoLabelFill: PropTypes.string,\n  currencyFill: PropTypes.string,\n  mustUserLogin: PropTypes.bool,\n  isConnected: PropTypes.bool,\n  isConnectBarOpened: PropTypes.bool,\n  isStatisticsBarOpened: PropTypes.bool,\n  account: PropTypes.string,\n  statisticsAccount: PropTypes.string,\n  balance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  currency: PropTypes.string,\n  chainName: PropTypes.string,\n  connectors: PropTypes.array,\n  activeNavigationItem: PropTypes.string,\n  statistics: PropTypes.object,\n  featureToggles: PropTypes.object,\n  onConnectClick: PropTypes.func,\n  onDisconnectClick: PropTypes.func,\n  onConnectorClick: PropTypes.func,\n  onProfileClick: PropTypes.func,\n  onProfileIconClick: PropTypes.func,\n  onConnectBarCloseClick: PropTypes.func,\n  onStatisticsBarCloseClick: PropTypes.func,\n  content: PropTypes.node,\n  children: PropTypes.node,\n}\n\nexport default React.memo(PMGlobalHeader)\n"],"mappings":"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"}