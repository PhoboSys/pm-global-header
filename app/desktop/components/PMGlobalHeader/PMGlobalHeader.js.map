{"version":3,"file":"PMGlobalHeader.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_config","_FeatureToggle","_PMGlobalHeaderProvider","_Navbar","_Header","_ProfileBar","_ConnectBar","_StatisticsBar","_Connect","_AuthModal","_modals","e","__esModule","_getRequireWildcardCache","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","_arrayLikeToArray","toString","slice","constructor","name","Array","from","test","length","l","Symbol","iterator","f","o","next","done","push","value","isArray","PMGlobalHeader","_ref","headerClassName","connectClassName","profileBarClassName","profileBarInnerClassName","_ref$basepath","basepath","logoFill","logoLabelFill","currencyFill","maximumFractionDigits","maximumFractionDigitsPrecent","mustUserLogin","isConnecting","isConnected","isConnectBarOpenedControlled","isConnectBarOpened","isStatisticsBarOpenedControlled","isStatisticsBarOpened","injectedProviderType","account","nickname","statisticsAccount","statisticsNickname","balance","currency","chainName","connectors","activeNavigationItem","statistics","featureToggles","featureTogglesTitle","networkStatus","onConnectClick","onDisconnectClick","onNicknameChanged","onConnectorClick","onProfileClick","onProfileIconClick","onStatisticsBarCloseClick","onConnectBarCloseClick","onCurrencyChanged","onSupportClick","content","children","isConnectBarContolled","undefined","isStatisticsBarContolled","_useState","useState","_useState2","setConnectBarOpened","_useState3","_useState4","setStatisticsBarOpened","openConnectBar","useCallback","closeConnectBar","handleConnectClick","handleConnectorClick","connectorId","handleConnectBarCloseClick","handleCloseStatisticsBar","handleProfileIconClick","handleDisconnectClick","handleNicknameChange","_useModal","useModal","Content","AuthModal","hideClose","shouldCloseOnOverlayClick","openOnMount","modal","openAuthModal","open","closeAuthModal","close","createElement","FeatureTogglesProvider","toggles","active","className","innerClassName","onClick","onIconClick","isOpened","onCloseClick","address","username","isSelfView","id","config","modal_id","propTypes","PropTypes","string","number","bool","oneOfType","array","object","func","node","_default","exports","React","memo"],"sources":["../../../../src/desktop/components/PMGlobalHeader/PMGlobalHeader.js"],"sourcesContent":["import React, { useCallback, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport config from '../../../config'\nimport { FeatureTogglesProvider }from '../FeatureToggle'\nimport PMGlobalHeaderProvider from '../PMGlobalHeaderProvider'\nimport Navbar from '../Navbar'\nimport Header from '../Header'\nimport ProfileBar from '../ProfileBar'\nimport ConnectBar from '../ConnectBar'\nimport StatisticsBar from '../StatisticsBar'\nimport Connect from '../Connect'\nimport AuthModal from '../AuthModal'\nimport { useModal } from '../modals';\n\nconst PMGlobalHeader = ({\n  headerClassName,\n  connectClassName,\n  profileBarClassName,\n  profileBarInnerClassName,\n  basepath = \"/\",\n  logoFill,\n  logoLabelFill,\n  currencyFill,\n  maximumFractionDigits,\n  maximumFractionDigitsPrecent,\n  mustUserLogin,\n  isConnecting,\n  isConnected,\n  isConnectBarOpened: isConnectBarOpenedControlled,\n  isStatisticsBarOpened: isStatisticsBarOpenedControlled,\n  injectedProviderType,\n  account,\n  nickname,\n  statisticsAccount,\n  statisticsNickname,\n  balance,\n  currency,\n  chainName,\n  connectors,\n  activeNavigationItem,\n  statistics,\n  featureToggles,\n  featureTogglesTitle,\n  networkStatus,\n  onConnectClick,\n  onDisconnectClick,\n  onNicknameChanged,\n  onConnectorClick,\n  onProfileClick,\n  onProfileIconClick,\n  onStatisticsBarCloseClick,\n  onConnectBarCloseClick,\n  onCurrencyChanged,\n  onSupportClick,\n  content,\n  children,\n}) => {\n  const isConnectBarContolled = isConnectBarOpenedControlled !== undefined\n  const isStatisticsBarContolled = isStatisticsBarOpenedControlled !== undefined\n\n  const [isConnectBarOpened, setConnectBarOpened] = useState(false)\n  const [isStatisticsBarOpened, setStatisticsBarOpened] = useState(false)\n\n  const openConnectBar = useCallback(() => setConnectBarOpened(true), [])\n  const closeConnectBar = useCallback(() => setConnectBarOpened(false), [])\n\n  const handleConnectClick = useCallback(() => {\n    if (onConnectClick) onConnectClick()\n    if (!isConnectBarContolled) openConnectBar()\n  }, [isConnectBarContolled, openConnectBar, onConnectClick])\n\n  const handleConnectorClick = useCallback((connectorId) => {\n    if (onConnectorClick) onConnectorClick(connectorId)\n    if (!isConnectBarContolled) closeConnectBar()\n  }, [isConnectBarContolled, onConnectorClick, closeConnectBar])\n\n  const handleConnectBarCloseClick = useCallback(() => {\n    if (onConnectBarCloseClick) onConnectBarCloseClick()\n    if (!isConnectBarContolled) closeConnectBar()\n  }, [isConnectBarContolled, onConnectBarCloseClick, closeConnectBar])\n\n  const handleCloseStatisticsBar = useCallback(() => {\n    if (!isStatisticsBarContolled) setStatisticsBarOpened(false)\n    if (onStatisticsBarCloseClick) onStatisticsBarCloseClick()\n  }, [isStatisticsBarContolled, onStatisticsBarCloseClick])\n\n  const handleProfileIconClick = useCallback(() => {\n    if (!isStatisticsBarContolled) setStatisticsBarOpened(true)\n    if (onProfileIconClick) onProfileIconClick()\n  }, [isStatisticsBarContolled, onProfileIconClick])\n\n  const handleDisconnectClick = useCallback(() => {\n    if (!isStatisticsBarContolled) setStatisticsBarOpened(false)\n    if (onDisconnectClick) onDisconnectClick()\n  }, [isStatisticsBarContolled, onDisconnectClick])\n\n  const handleNicknameChange = useCallback((e) => {\n    if (onNicknameChanged) onNicknameChanged(e)\n  }, [onNicknameChanged])\n\n  const { modal, open: openAuthModal, close: closeAuthModal } = useModal({\n    Content: AuthModal,\n    hideClose: true,\n    shouldCloseOnOverlayClick: false,\n    openOnMount: mustUserLogin,\n    onConnectorClick,\n    connectors,\n    isConnected,\n    injectedProviderType,\n  })\n\n  return (\n    <FeatureTogglesProvider toggles={featureToggles}>\n      <PMGlobalHeaderProvider\n        currencyFill={currencyFill}\n        openAuthModal={openAuthModal}\n        closeAuthModal={closeAuthModal}\n        maximumFractionDigits={maximumFractionDigits}\n        maximumFractionDigitsPrecent={maximumFractionDigitsPrecent}\n      >\n        <Navbar\n          basepath={basepath}\n          logoFill={logoFill}\n          logoLabelFill={logoLabelFill}\n          active={activeNavigationItem}\n          featureTogglesTitle={featureTogglesTitle}\n          networkStatus={networkStatus}\n          onSupportClick={onSupportClick}\n        />\n        <Header className={headerClassName}>\n          {content}\n          {isConnected ? (\n            <ProfileBar\n              className={profileBarClassName}\n              innerClassName={profileBarInnerClassName}\n              balance={balance}\n              currency={currency}\n              account={account}\n              nickname={nickname}\n              chainName={chainName}\n              onDisconnectClick={onDisconnectClick}\n              onClick={onProfileClick}\n              onIconClick={handleProfileIconClick}\n              onCurrencyChanged={onCurrencyChanged}\n            />\n          ) : (\n            <Connect\n              className={connectClassName}\n              isConnecting={isConnecting}\n              onClick={handleConnectClick}\n            />\n          )}\n        </Header>\n        <ConnectBar\n          isOpened={isConnectBarContolled ? isConnectBarOpenedControlled : isConnectBarOpened}\n          connectors={connectors}\n          onCloseClick={handleConnectBarCloseClick}\n          onConnectorClick={handleConnectorClick}\n          injectedProviderType={injectedProviderType}\n        />\n        <StatisticsBar\n          address={statisticsAccount}\n          username={statisticsNickname}\n          isSelfView={isConnected && (account === statisticsAccount)}\n          isOpened={isStatisticsBarContolled ? isStatisticsBarOpenedControlled : isStatisticsBarOpened}\n          statistics={statistics}\n          isConnected={isConnected}\n          onCloseClick={handleCloseStatisticsBar}\n          onDisconnectClick={handleDisconnectClick}\n          onNicknameChanged={handleNicknameChange}\n        />\n        {children}\n        {modal}\n      </PMGlobalHeaderProvider>\n      <div id={config.modal_id} />\n    </FeatureTogglesProvider>\n  )\n}\n\nPMGlobalHeader.propTypes = {\n  headerClassName: PropTypes.string,\n  connectClassName: PropTypes.string,\n  profileBarClassName: PropTypes.string,\n  profileBarInnerClassName: PropTypes.string,\n  basepath: PropTypes.string,\n  logoFill: PropTypes.string,\n  logoLabelFill: PropTypes.string,\n  currencyFill: PropTypes.string,\n  maximumFractionDigits: PropTypes.number,\n  maximumFractionDigitsPrecent: PropTypes.number,\n  mustUserLogin: PropTypes.bool,\n  isConnecting: PropTypes.bool,\n  isConnected: PropTypes.bool,\n  isConnectBarOpened: PropTypes.bool,\n  isStatisticsBarOpened: PropTypes.bool,\n  injectedProviderType: PropTypes.string,\n  account: PropTypes.string,\n  nickname: PropTypes.string,\n  statisticsAccount: PropTypes.string,\n  statisticsNickname: PropTypes.string,\n  balance: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  currency: PropTypes.string,\n  chainName: PropTypes.string,\n  connectors: PropTypes.array,\n  activeNavigationItem: PropTypes.string,\n  statistics: PropTypes.object,\n  featureToggles: PropTypes.object,\n  featureTogglesTitle: PropTypes.string,\n  networkStatus: PropTypes.string,\n  onConnectClick: PropTypes.func,\n  onDisconnectClick: PropTypes.func,\n  onConnectorClick: PropTypes.func,\n  onProfileClick: PropTypes.func,\n  onProfileIconClick: PropTypes.func,\n  onConnectBarCloseClick: PropTypes.func,\n  onNicknameChanged: PropTypes.func,\n  onStatisticsBarCloseClick: PropTypes.func,\n  onSupportClick: PropTypes.func,\n  content: PropTypes.node,\n  children: PropTypes.node,\n}\n\nexport default React.memo(PMGlobalHeader)\n"],"mappings":"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","ignoreList":[]}