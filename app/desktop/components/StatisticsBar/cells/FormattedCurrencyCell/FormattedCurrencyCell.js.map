{"version":3,"file":"FormattedCurrencyCell.js","names":["_propTypes","_interopRequireDefault","require","_calcUtils","_htmlUtils","_PMGlobalHeaderProvider","e","__esModule","formatSymboled","amount","currency","formater","Intl","NumberFormat","Locale","style","currencyDisplay","minimumFractionDigits","maximumFractionDigits","format","formatNumber","num","arguments","length","undefined","token","map","suffix","threshold","formatted","found","find","x","Math","abs","div","htmlCurrency","FormattedCurrencyCell","_ref","_useGHProvider","useGHProvider","propTypes","PropTypes","oneOfType","string","number","bool","_default","exports"],"sources":["../../../../../../src/desktop/components/StatisticsBar/cells/FormattedCurrencyCell/FormattedCurrencyCell.js"],"sourcesContent":["import PropTypes from 'prop-types'\nimport { div } from '@oracly/pm-libs/calc-utils'\n\nimport { htmlCurrency } from '@lib/html-utils'\n\nimport { useGHProvider } from '../../../PMGlobalHeaderProvider'\n\nconst formatSymboled = (amount, currency) => {\n  const formater = new Intl.NumberFormat(Intl.Locale, {\n    style: 'currency',\n    currency,\n    currencyDisplay: 'narrowSymbol',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n  })\n  return formater.format(amount)\n}\n\nfunction formatNumber(num = 0, currency, token, maximumFractionDigits) {\n  const map = [\n    { suffix: 'T', threshold: 1e12 },\n    { suffix: 'B', threshold: 1e9 },\n    { suffix: 'M', threshold: 1e6 },\n    { suffix: 'K', threshold: 1e3 },\n    { suffix: '', threshold: 1 },\n  ]\n\n  let formatted = num\n\n  const found = map.find((x) => Math.abs(num) >= x.threshold)\n  if (found) formatted = div(num, found.threshold)\n  if (!token && currency) formatted = formatSymboled(formatted, currency)\n  if (token) formatted = htmlCurrency(formatted, maximumFractionDigits)\n  if (found) formatted = formatted + found.suffix\n\n  return formatted\n}\n\nconst FormattedCurrencyCell = ({ amount, currency, token }) => {\n  const { maximumFractionDigits } = useGHProvider()\n\n  return formatNumber(amount, currency, token, maximumFractionDigits)\n}\n\nFormattedCurrencyCell.propTypes = {\n  amount: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  currency: PropTypes.string,\n  token: PropTypes.bool,\n}\n\nexport default FormattedCurrencyCell"],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAEA,IAAAE,UAAA,GAAAF,OAAA;AAEA,IAAAG,uBAAA,GAAAH,OAAA;AAA+D,SAAAD,uBAAAK,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAE/D,IAAME,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,MAAM,EAAEC,QAAQ,EAAK;EAC3C,IAAMC,QAAQ,GAAG,IAAIC,IAAI,CAACC,YAAY,CAACD,IAAI,CAACE,MAAM,EAAE;IAClDC,KAAK,EAAE,UAAU;IACjBL,QAAQ,EAARA,QAAQ;IACRM,eAAe,EAAE,cAAc;IAC/BC,qBAAqB,EAAE,CAAC;IACxBC,qBAAqB,EAAE;EACzB,CAAC,CAAC;EACF,OAAOP,QAAQ,CAACQ,MAAM,CAACV,MAAM,CAAC;AAChC,CAAC;AAED,SAASW,YAAYA,CAAA,EAAkD;EAAA,IAAjDC,GAAG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAAEZ,QAAQ,GAAAY,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAA,IAAEC,KAAK,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAAA,IAAEN,qBAAqB,GAAAI,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnE,IAAME,GAAG,GAAG,CACV;IAAEC,MAAM,EAAE,GAAG;IAAEC,SAAS,EAAE;EAAK,CAAC,EAChC;IAAED,MAAM,EAAE,GAAG;IAAEC,SAAS,EAAE;EAAI,CAAC,EAC/B;IAAED,MAAM,EAAE,GAAG;IAAEC,SAAS,EAAE;EAAI,CAAC,EAC/B;IAAED,MAAM,EAAE,GAAG;IAAEC,SAAS,EAAE;EAAI,CAAC,EAC/B;IAAED,MAAM,EAAE,EAAE;IAAEC,SAAS,EAAE;EAAE,CAAC,CAC7B;EAED,IAAIC,SAAS,GAAGR,GAAG;EAEnB,IAAMS,KAAK,GAAGJ,GAAG,CAACK,IAAI,CAAC,UAACC,CAAC;IAAA,OAAKC,IAAI,CAACC,GAAG,CAACb,GAAG,CAAC,IAAIW,CAAC,CAACJ,SAAS;EAAA,EAAC;EAC3D,IAAIE,KAAK,EAAED,SAAS,GAAG,IAAAM,cAAG,EAACd,GAAG,EAAES,KAAK,CAACF,SAAS,CAAC;EAChD,IAAI,CAACH,KAAK,IAAIf,QAAQ,EAAEmB,SAAS,GAAGrB,cAAc,CAACqB,SAAS,EAAEnB,QAAQ,CAAC;EACvE,IAAIe,KAAK,EAAEI,SAAS,GAAG,IAAAO,uBAAY,EAACP,SAAS,EAAEX,qBAAqB,CAAC;EACrE,IAAIY,KAAK,EAAED,SAAS,GAAGA,SAAS,GAAGC,KAAK,CAACH,MAAM;EAE/C,OAAOE,SAAS;AAClB;AAEA,IAAMQ,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAAoC;EAAA,IAA9B7B,MAAM,GAAA6B,IAAA,CAAN7B,MAAM;IAAEC,QAAQ,GAAA4B,IAAA,CAAR5B,QAAQ;IAAEe,KAAK,GAAAa,IAAA,CAALb,KAAK;EACtD,IAAAc,cAAA,GAAkC,IAAAC,qCAAa,EAAC,CAAC;IAAzCtB,qBAAqB,GAAAqB,cAAA,CAArBrB,qBAAqB;EAE7B,OAAOE,YAAY,CAACX,MAAM,EAAEC,QAAQ,EAAEe,KAAK,EAAEP,qBAAqB,CAAC;AACrE,CAAC;AAEDmB,qBAAqB,CAACI,SAAS,GAAG;EAChChC,MAAM,EAAEiC,qBAAS,CAACC,SAAS,CAAC,CAACD,qBAAS,CAACE,MAAM,EAAEF,qBAAS,CAACG,MAAM,CAAC,CAAC;EACjEnC,QAAQ,EAAEgC,qBAAS,CAACE,MAAM;EAC1BnB,KAAK,EAAEiB,qBAAS,CAACI;AACnB,CAAC;AAAA,IAAAC,QAAA,GAAAC,OAAA,cAEcX,qBAAqB","ignoreList":[]}