{"version":3,"file":"StakerTabContent.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_cells","_TabContent","e","__esModule","_getRequireWildcardCache","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","cellRenderers","stats","row","name","createElement","CurrencyCell","amount","value","currency","convertedAmount","convertedCurrency","hideConverted","Number","PercentCell","DateCell","date","claimed","TokenCurrencyCell","statsOrder","StakerTabContent","_ref","achievements","tokenStats","isLoading","statsColumns","useMemo","dataKey","cellRenderer","tokenStatsColumns","label","propTypes","PropTypes","array","object","bool","_default","exports"],"sources":["../../../../../src/desktop/components/StatisticsBar/StakerTabContent/StakerTabContent.js"],"sourcesContent":["import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TokenCurrencyCell, DateCell, CurrencyCell, PercentCell } from '../cells'\nimport TabContent from '../TabContent'\n\nconst cellRenderers = {\n  stats: (row) => {\n    if (row.name === 'staked') {\n      return (\n        <CurrencyCell\n          amount={row.value.amount}\n          currency={row.value.currency}\n          convertedAmount={row.value.convertedAmount}\n          convertedCurrency={row.value.convertedCurrency}\n          hideConverted={!Number(row.value.convertedAmount)}\n        />\n      )\n    }\n    if (row.name === 'voting') {\n      return <PercentCell value={row.value} />\n    }\n    if (row.name === 'joined') {\n      return <DateCell date={row.value} />\n    }\n\n    if (row.name === 'last activity') {\n      return <DateCell date={row.value} />\n    }\n  },\n  claimed: (row) => (\n    <TokenCurrencyCell\n      amount={row.value.amount}\n      currency={row.value.currency}\n    />\n  ),\n}\n\nconst statsOrder = ['staked', 'voting', 'joined', 'last activity']\n\nconst StakerTabContent = ({ achievements, stats, tokenStats, isLoading }) => {\n  const statsColumns = useMemo(() => [\n    { dataKey: 'name' },\n    { cellRenderer: cellRenderers.stats },\n  ], [])\n  const tokenStatsColumns = useMemo(() => [\n    { label: 'Name', dataKey: 'name' },\n    { label: 'Claimed', cellRenderer: cellRenderers.claimed },\n  ], [])\n\n  return (\n    <TabContent\n      achievements={achievements}\n      stats={stats}\n      statsOrder={statsOrder}\n      statsColumns={statsColumns}\n      tokenStats={tokenStats}\n      tokenStatsColumns={tokenStatsColumns}\n      isLoading={isLoading}\n    />\n  )\n}\n\nStakerTabContent.propTypes = {\n  achievements: PropTypes.array,\n  stats: PropTypes.object,\n  tokenStats: PropTypes.object,\n  isLoading: PropTypes.bool,\n}\n\nexport default StakerTabContent"],"mappings":"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","ignoreList":[]}