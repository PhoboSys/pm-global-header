{"version":3,"file":"PredictorTabContent.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_cells","_TabContent","e","__esModule","_getRequireWildcardCache","WeakMap","r","t","_typeof","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","cellRenderers","stats","row","name","value","createElement","FormattedCurrencyCell","amount","convertedAmount","currency","convertedCurrency","DateCell","date","wagered","_row$value","_row$value2","TokenCurrencyCell","earned","_row$value3","_row$value4","statsOrder","PredictorTabContent","_ref","achievements","tokenStats","statsColumns","useMemo","dataKey","cellRenderer","tokenStatsColumns","label","token","propTypes","PropTypes","array","object","_default","exports"],"sources":["../../../../../src/mobile/components/StatisticsBar/PredictorTabContent/PredictorTabContent.js"],"sourcesContent":["import React, { useMemo } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { TokenCurrencyCell, DateCell } from '../cells'\nimport { FormattedCurrencyCell } from '../cells'\nimport TabContent from '../TabContent'\n\nconst cellRenderers = {\n  stats: (row) => {\n    if (row.name === 'predictions') {\n      return row.value\n    }\n    if (row.name === 'wagered') {\n      return (\n        <FormattedCurrencyCell\n          amount={row.value.convertedAmount}\n          currency={row.value.convertedCurrency}\n        />\n      )\n    }\n    if (row.name === 'earned') {\n      return (\n        <FormattedCurrencyCell\n          amount={row.value.convertedAmount}\n          currency={row.value.convertedCurrency}\n        />\n      )\n    }\n    if (row.name === 'joined') {\n      return <DateCell date={row.value} />\n    }\n    if (row.name === 'last activity') {\n      return <DateCell date={row.value} />\n    }\n  },\n  wagered: (row) => (\n    <TokenCurrencyCell\n      amount={row.value?.wagered?.amount}\n      currency={row.value?.wagered?.currency}\n    />\n  ),\n  earned: (row) => (\n    <TokenCurrencyCell\n      amount={row.value?.earned?.amount}\n      currency={row.value?.earned?.currency}\n    />\n  ),\n}\n\nconst statsOrder = ['predictions', 'wegered', 'earned', 'joined', 'last activity']\n\nconst PredictorTabContent = ({ achievements, stats, tokenStats }) => {\n  const statsColumns = useMemo(() => [\n    { dataKey: 'name' },\n    { cellRenderer: cellRenderers.stats },\n  ], [])\n  const tokenStatsColumns = useMemo(() => [\n    { label: 'Name', dataKey: 'name' },\n    { label: 'Wagered', cellRenderer: cellRenderers.token },\n    { label: 'Earned', cellRenderer: cellRenderers.token },\n  ], [])\n\n  return (\n    <TabContent\n      achievements={achievements}\n      stats={stats}\n      statsOrder={statsOrder}\n      statsColumns={statsColumns}\n      tokenStats={tokenStats}\n      tokenStatsColumns={tokenStatsColumns}\n    />\n  )\n}\n\nPredictorTabContent.propTypes = {\n  achievements: PropTypes.array,\n  stats: PropTypes.object,\n  tokenStats: PropTypes.object,\n}\n\nexport default PredictorTabContent"],"mappings":"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","ignoreList":[]}