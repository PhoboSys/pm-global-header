{"version":3,"file":"FeatureTogglesProvider.js","names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_lodash","_FeatureTogglesProviderContext","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","value","_toPropertyKey","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","l","iterator","u","a","f","next","done","isArray","FeatureTogglesProvider","_ref","featureToggles","toggles","children","_useState","useState","_useState2","setToggles","useCallback","_toggles$name","useMemo","features","mapValues","_ref2","createElement","Provider","propTypes","PropTypes","object","node","_default","exports"],"sources":["../../src/features/FeatureTogglesProvider.js"],"sourcesContent":["import React, { useCallback, useMemo, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { mapValues } from 'lodash'\n\nimport FeatureTogglesProviderContext from './FeatureTogglesProviderContext';\n\nconst FeatureTogglesProvider = ({ toggles: featureToggles, children }) => {\n\n  const [toggles, setToggles] = useState(featureToggles)\n\n  const get = useCallback((name) => toggles?.[name]?.value, [toggles])\n  const set = useCallback((name, value) => {\n    setToggles((toggles) => ({ ...toggles, [name]: { ...toggles[name], value } }))\n  }, [])\n\n  const value = useMemo(\n    () => ({\n      toggles: featureToggles,\n      get,\n      set,\n      features: mapValues(toggles, ({ value }) => value),\n    }),\n    [toggles, get, set]\n  );\n\n  return (\n    <FeatureTogglesProviderContext.Provider value={value}>\n      {children}\n    </FeatureTogglesProviderContext.Provider>\n  )\n}\n\nFeatureTogglesProvider.propTypes = {\n  toggles: PropTypes.object,\n  children: PropTypes.node,\n}\n\nexport default FeatureTogglesProvider"],"mappings":"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"}