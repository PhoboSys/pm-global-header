{"version":3,"file":"Navbar.js","names":["_react","_interopRequireWildcard","require","_clsx","_interopRequireDefault","_propTypes","_Button","_useTransition3","_Logo","_Trade","_Staking","_Mentoring","_LogoLabel","_NavbarModule","obj","__esModule","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_extends","assign","bind","target","i","arguments","length","source","apply","_defineProperty","value","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","o","minLen","_arrayLikeToArray","n","toString","slice","constructor","name","Array","from","test","len","arr2","_i","iterator","_s","_e","_x","_r","_arr","_n","_d","next","done","push","err","isArray","menuItems","icon","createElement","label","localStorageSelector","NavBar","_ref","logoFill","logoLabelFill","active","_useState","useState","localStorage","getItem","_useState2","expanded","setExpanded","timeout","_useTransition","useTransition","_useTransition2","mount","opening","toggleNavbar","useCallback","setItem","handleMenuItemClick","e","currentTarget","hasAttribute","className","cn","css","container","navbar","icons","href","logo","tabIndex","fill","menuIcons","map","_ref2","menuIcon","onClick","button","labels","logoLabel","menuLabels","_ref3","menuLabel","propTypes","PropTypes","string","_default","React","memo","exports"],"sources":["../../../src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useCallback, useState } from 'react'\nimport cn from 'clsx'\nimport PropTypes from 'prop-types'\n\nimport ButtonProvider from '../common/Button'\nimport { useTransition } from '../../hooks/useTransition'\nimport LogoIcon from '../SVG/Logo'\nimport TradeIcon from '../SVG/Trade'\nimport StakingIcon from '../SVG/Staking'\nimport MentoringIcon from '../SVG/Mentoring'\nimport LogoLabel from '../SVG/LogoLabel'\n\nimport css from './Navbar.module.scss'\n\nconst menuItems = [\n  { name: 'trade', icon: <TradeIcon />, label: 'Trading' },\n  { name: 'staking', icon: <StakingIcon />, label: 'Staking' },\n  { name: 'mentoring', icon: <MentoringIcon />, label: 'Mentoring' },\n]\n\nconst localStorageSelector = 'pm-global-header-menu-expanded'\n\nconst NavBar = ({ logoFill, logoLabelFill, active }) => {\n\n  const [expanded, setExpanded] = useState(localStorage.getItem(localStorageSelector) === 'true')\n\n  const timeout = 100 //ms\n  const [mount, opening] = useTransition(expanded, timeout)\n\n  const toggleNavbar = useCallback(() => {\n    setExpanded((expanded) => {\n      localStorage.setItem(localStorageSelector, !expanded)\n      return !expanded\n    })\n  }, [])\n\n  const handleMenuItemClick = useCallback((e) => {\n    if (e.currentTarget.hasAttribute('data-active')) {\n      toggleNavbar()\n    }\n  }, [toggleNavbar])\n\n  return (\n    <div className={cn(css.container, { [css.expanded]: opening })}>\n      <div className={css.navbar}>\n\n        <div className={css.icons}>\n          <a href=\"/\" className={css.logo} tabIndex={-1}>\n            <LogoIcon fill={logoFill} />\n          </a>\n          <ul className={css.menuIcons}>\n            {menuItems.map(({ name, icon }) => (\n              <li\n                key={name}\n                className={cn(css.menuIcon, { [css.active]: active === name })}\n                onClick={handleMenuItemClick}\n                {...(active === name ? {'data-active': '1'} : {})}\n              >\n                <ButtonProvider className={css.button}>\n                  {icon}\n                </ButtonProvider>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {mount && (\n          <div className={css.labels}>\n            <a href=\"/\" className={css.logoLabel} tabIndex={-1}>\n              <LogoLabel fill={logoLabelFill} />\n            </a>\n            <ul className={css.menuLabels}>\n              {menuItems.map(({ name, label }) => (\n                <li\n                  key={name}\n                  className={cn(css.menuLabel, { [css.active]: active === name })}\n                  onClick={handleMenuItemClick}\n                  {...(active === name ? {'data-active': '1'} : {})}\n                >\n                  {label}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nNavBar.propTypes = {\n  active: PropTypes.string,\n  logoFill: PropTypes.string,\n  logoLabelFill: PropTypes.string,\n}\n\nexport default React.memo(NavBar)\n"],"mappings":"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"}