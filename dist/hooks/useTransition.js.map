{"version":3,"file":"useTransition.js","names":["_react","require","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","r","l","t","Symbol","iterator","e","u","a","f","next","done","push","value","isArray","useUninitialEffect","effect","deps","initialRender","useRef","useEffect","current","useTransition","entering","timeout","_useState","useState","_useState2","mount","setmount","_useState3","_useState4","forward","setforward","TRANS","setTimeout","clearTimeout"],"sources":["../../src/hooks/useTransition.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react'\n\nfunction useUninitialEffect(effect, deps) {\n\tconst initialRender = useRef(true)\n\n\tuseEffect(() => {\n\t\tif (initialRender.current) initialRender.current = false\n\t\telse return effect()\n\t}, deps)\n}\n\nexport function useTransition(entering, timeout) {\n\n  const [mount, setmount] = useState(entering)\n  const [forward, setforward] = useState(entering)\n\n\tuseUninitialEffect(() => {\n\n    let TRANS\n\t\tif (entering) {\n      // entering\n      setmount(true)\n      TRANS = setTimeout(() => setforward(true), 50)\n    } else {\n      // exiting\n      setforward(false)\n      TRANS = setTimeout(() => setmount(false), timeout)\n    }\n\n    return () => {\n      clearTimeout(TRANS)\n    }\n\n\t}, [entering])\n\n  return [mount, forward]\n\n}\n"],"mappings":"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"}